# -*- mode: ruby -*-
# vi: set ft=ruby :

$docker_install = <<-SCRIPT
# Update and install requirments
sudo apt-get update
sudo apt-get install -y ca-certificates curl gnupg
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg

# Add the repository to Apt sources:
echo \
  "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update

# Install docker-engine
sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
SCRIPT

$update = <<-SCRIPT
sudo apt-get update
sudo apt-get upgrade -y
SCRIPT

$nginx = <<-SCRIPT
sudo apt-get update
sudo apt-get install -y nginx
sudo systemctl start nginx
SCRIPT

$add_adam = <<-SCRIPT
sudo apt-get update
sudo apt-get install -y zsh

sudo adduser adam --home /home/adam --shell /bin/zsh --disabled-password --gecos "Adam"
echo "adam ALL=(ALL) NOPASSWD: ALL" | sudo tee -a /etc/sudoers
SCRIPT

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/jammy64"

  config.vm.box_check_update = false

  config.vm.define "vm1" do |vm1|
    vm1.vm.network "forwarded_port", guest: 88, host: 8080
    vm1.vm.provision "shell", inline: $update
    vm1.vm.provision "shell", inline: $nginx
    vm1.vm.network "private_network", ip: "172.20.0.5", netmask: "24"

    vm1.vm.provider "virtualbox" do |vb|
      vb.check_guest_additions = false
      vb.customize ["modifyvm", :id, "--nested-hw-virt", "on"]
    end
  end

  config.vm.define "vm2" do |vm2|
    vm2.vm.disk :disk, size: "60GB", primary: true
    vm2.vm.network "public_network"
    vm2.vm.provision "shell", inline: $update
    vm2.vm.provision "shell", inline: $docker_install
    
    vm2.vm.provider "virtualbox" do |vb|
      vb.check_guest_additions = false
      vb.customize ["modifyvm", :id, "--nested-hw-virt", "on"]
    end
  end

  config.vm.define "vm3" do |vm3|
    vm3.vm.network "private_network", ip: "172.20.0.6", netmask: "24"
    vm3.vm.provision "shell", inline: $add_adam, run: "once"

    vm3.vm.provider "virtualbox" do |vb|
      vb.check_guest_additions = false
      vb.customize ["modifyvm", :id, "--nested-hw-virt", "on"]
    end
  end
end
